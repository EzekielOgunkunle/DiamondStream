# Generated by Django 5.2.4 on 2025-07-19 06:10

import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('in_app', 'In-App Notification'), ('sms', 'SMS'), ('push', 'Push Notification')], max_length=20)),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('html_content', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('scheduled_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('clicked_at', models.DateTimeField(blank=True, null=True)),
                ('external_id', models.CharField(blank=True, help_text='ID from email/SMS service', max_length=255)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('max_retries', models.PositiveIntegerField(default=3)),
                ('context_data', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'db_table': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationQueue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='queued', max_length=20)),
                ('priority', models.PositiveIntegerField(default=5, help_text='Lower number = higher priority')),
                ('execute_at', models.DateTimeField()),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('worker_id', models.CharField(blank=True, max_length=100)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Queue Entry',
                'verbose_name_plural': 'Notification Queue Entries',
                'db_table': 'notification_queue',
                'ordering': ['priority', 'execute_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('channel', models.CharField(max_length=20)),
                ('notification_type', models.CharField(max_length=30)),
                ('total_sent', models.PositiveIntegerField(default=0)),
                ('total_delivered', models.PositiveIntegerField(default=0)),
                ('total_failed', models.PositiveIntegerField(default=0)),
                ('total_read', models.PositiveIntegerField(default=0)),
                ('total_clicked', models.PositiveIntegerField(default=0)),
                ('delivery_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('open_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('click_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Statistics',
                'verbose_name_plural': 'Notification Statistics',
                'db_table': 'notification_stats',
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('notification_type', models.CharField(choices=[('welcome', 'Welcome Email'), ('email_verification', 'Email Verification'), ('password_reset', 'Password Reset'), ('investment_created', 'Investment Created'), ('payment_received', 'Payment Received'), ('payment_confirmed', 'Payment Confirmed'), ('investment_matured', 'Investment Matured'), ('payout_processed', 'Payout Processed'), ('kyc_approved', 'KYC Approved'), ('kyc_rejected', 'KYC Rejected'), ('referral_earned', 'Referral Commission Earned'), ('security_alert', 'Security Alert'), ('maintenance_notice', 'Maintenance Notice'), ('system_update', 'System Update'), ('admin_message', 'Admin Message')], max_length=30)),
                ('channel', models.CharField(choices=[('email', 'Email'), ('in_app', 'In-App Notification'), ('sms', 'SMS'), ('push', 'Push Notification')], max_length=20)),
                ('subject', models.CharField(help_text='For email notifications', max_length=255)),
                ('title', models.CharField(help_text='For in-app notifications', max_length=255)),
                ('content', models.TextField(help_text='Template content with placeholders')),
                ('html_content', models.TextField(blank=True, help_text='HTML version for emails')),
                ('is_active', models.BooleanField(default=True)),
                ('is_system', models.BooleanField(default=False, help_text='System templates cannot be deleted')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('auto_send', models.BooleanField(default=True)),
                ('delay_minutes', models.PositiveIntegerField(default=0, help_text='Delay before sending')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Notification Template',
                'verbose_name_plural': 'Notification Templates',
                'db_table': 'notification_templates',
            },
        ),
        migrations.CreateModel(
            name='UserNotificationPreferences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_investment_updates', models.BooleanField(default=True)),
                ('email_payment_confirmations', models.BooleanField(default=True)),
                ('email_payout_notifications', models.BooleanField(default=True)),
                ('email_security_alerts', models.BooleanField(default=True)),
                ('email_marketing', models.BooleanField(default=False)),
                ('email_system_updates', models.BooleanField(default=True)),
                ('inapp_investment_updates', models.BooleanField(default=True)),
                ('inapp_payment_confirmations', models.BooleanField(default=True)),
                ('inapp_payout_notifications', models.BooleanField(default=True)),
                ('inapp_security_alerts', models.BooleanField(default=True)),
                ('inapp_system_updates', models.BooleanField(default=True)),
                ('sms_enabled', models.BooleanField(default=False)),
                ('sms_security_alerts', models.BooleanField(default=False)),
                ('sms_payment_confirmations', models.BooleanField(default=False)),
                ('sms_two_factor', models.BooleanField(default=True)),
                ('push_enabled', models.BooleanField(default=False)),
                ('push_investment_updates', models.BooleanField(default=True)),
                ('push_payment_confirmations', models.BooleanField(default=True)),
                ('digest_frequency', models.CharField(choices=[('immediate', 'Immediate'), ('daily', 'Daily Digest'), ('weekly', 'Weekly Digest'), ('monthly', 'Monthly Digest'), ('disabled', 'Disabled')], default='immediate', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User Notification Preferences',
                'verbose_name_plural': 'User Notification Preferences',
                'db_table': 'user_notification_preferences',
            },
        ),
    ]
