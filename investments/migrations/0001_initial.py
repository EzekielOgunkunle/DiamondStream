# Generated by Django 5.2.4 on 2025-07-19 11:34

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=8, max_digits=15)),
                ('currency', models.CharField(max_length=10)),
                ('expected_return', models.DecimalField(decimal_places=8, max_digits=15)),
                ('payment_method', models.CharField(choices=[('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('DOGE', 'Dogecoin'), ('PLATFORM_WALLET', 'Platform Wallet')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending Payment'), ('payment_submitted', 'Payment Submitted'), ('confirmed', 'Payment Confirmed'), ('active', 'Active Investment'), ('matured', 'Matured'), ('paid', 'Payout Completed'), ('cancelled', 'Cancelled'), ('disputed', 'Disputed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment_submitted_at', models.DateTimeField(blank=True, null=True)),
                ('confirmed_at', models.DateTimeField(blank=True, null=True)),
                ('maturity_date', models.DateTimeField()),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('transaction_hash', models.CharField(blank=True, max_length=255)),
                ('payment_address', models.CharField(blank=True, max_length=255)),
                ('payment_proof', models.FileField(blank=True, null=True, upload_to='payment_proofs/')),
                ('admin_notes', models.TextField(blank=True)),
                ('payout_transaction_hash', models.CharField(blank=True, max_length=255)),
                ('payout_address', models.CharField(blank=True, max_length=255)),
                ('payout_amount', models.DecimalField(blank=True, decimal_places=8, max_digits=15, null=True)),
            ],
            options={
                'verbose_name': 'Investment',
                'verbose_name_plural': 'Investments',
                'db_table': 'investments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvestmentHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_from', models.CharField(blank=True, max_length=20)),
                ('status_to', models.CharField(max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Investment History',
                'verbose_name_plural': 'Investment History',
                'db_table': 'investment_history',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='InvestmentPlan',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('plan_type', models.CharField(choices=[('beginners', 'Beginners Plan'), ('vip', 'VIP Plan'), ('vvip', 'VVIP Plan')], max_length=20)),
                ('description', models.TextField()),
                ('min_amount', models.DecimalField(decimal_places=8, max_digits=15)),
                ('max_amount', models.DecimalField(decimal_places=8, max_digits=15)),
                ('currency', models.CharField(choices=[('USD', 'US Dollar'), ('BTC', 'Bitcoin'), ('ETH', 'Ethereum'), ('DOGE', 'Dogecoin')], default='USD', max_length=10)),
                ('roi_percentage', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000)])),
                ('return_amount', models.DecimalField(decimal_places=8, max_digits=15)),
                ('duration_hours', models.PositiveIntegerField(blank=True, null=True)),
                ('duration_days', models.PositiveIntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('max_investments_per_user', models.PositiveIntegerField(default=1)),
                ('total_slots', models.PositiveIntegerField(blank=True, null=True)),
                ('used_slots', models.PositiveIntegerField(default=0)),
                ('allowed_payment_methods', models.JSONField(default=list, help_text="List of allowed payment methods: ['BTC', 'ETH', 'DOGE', 'PLATFORM_WALLET']")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Investment Plan',
                'verbose_name_plural': 'Investment Plans',
                'db_table': 'investment_plans',
                'ordering': ['plan_type', 'min_amount'],
            },
        ),
        migrations.CreateModel(
            name='ReferralCommission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commission_rate', models.DecimalField(decimal_places=2, help_text='Commission rate as percentage (e.g., 5.00 for 5%)', max_digits=5)),
                ('commission_amount', models.DecimalField(decimal_places=8, max_digits=15)),
                ('currency', models.CharField(max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('earned', 'Earned'), ('paid', 'Paid'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('paid_at', models.DateTimeField(blank=True, null=True)),
                ('payout_transaction_hash', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Referral Commission',
                'verbose_name_plural': 'Referral Commissions',
                'db_table': 'referral_commissions',
                'ordering': ['-created_at'],
            },
        ),
    ]
